################################################################################
# ZSH Customizations
################################################################################
#source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
#source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
export DEFAULT_USER='$USER'
unsetopt PROMPT_SP
unset zle_bracketed_paste
################################################################################
# Prompt Customizations
################################################################################
# Terminal Colors
#export CLICOLORS=1
#export LSCOLORS=GxFxBxDxCxegedabagacad
################################################################################
# PATH Modificiations
################################################################################
export PATH=$PATH:.
################################################################################
# Aliases
################################################################################
### ls
#alias ls="ls -Gh"
alias lsl="ls -1l"
alias lsa="ls -A"
alias lsld="ls -l -d */"
alias lsd="ls -d1 */"
alias lsf="ls -p | grep -v /"
### clear
alias clr="clear"
alias cls="clear && ls"
### cd ..
alias cdd="cd .."
### copy
alias cpdir="cp -avr"
### docker
alias drmi="docker rmi"
alias dils="docker images -a"
alias dcls="docker container ls -a"
alias drmc="docker container rm"
alias db="docker build"
alias diprune="docker image prune"
alias dcprune="docker container prune"
alias dclean=clean_docker
alias denv=create_docker_env
alias dshell=docker_env_shell
### trash
alias trash="rmtrash"
### python3
alias py3="python3"
### compression/archive
alias targz=targzfunc
alias untar=untarfunc
alias zipped=zipup
### git
alias github=github_clone
alias gitlab=gitlab_clone
### navigation
alias desktop="cd ~/Desktop"
alias downloads="cd ~/Downloads"
alias home="cd ~"
### gcc
#alias gcc="gcc-9"
### oh-my-zsh update
alias update_omz="~/OSConfigs/macos/update_omz.zsh"
################################################################################
################################################################################
################################################################################
# Functions
################################################################################
function git_setup () {
  git config --global core.autocrlf input
}

function github_clone() {                                                       
  VAR=$1;                                                                       
  git clone git@github.com:$VAR                                                 
}                                                                               
                                                                                
function gitlab_clone() {                                                       
  VAR=$1;                                                                       
  git clone git@gitlab.com:$VAR                                                 
}                                                                               
                                                                                
function targzfunc() {                                                          
  VAR=$1;                                                                       
  VAR=${VAR%/};                                                                 
  tar -zcvf "$VAR.tar.gz" ./"$VAR"                                              
}                                                                               
                                                                                
function untarfunc() {                                                          
  VAR=$1                                                                        
  VAR=${VAR}                                                                    
  tar -xvf ./"$VAR"                                                             
}

function zipup() {
  VAR=$1
  VAR=${VAR%/}
  zip -r "$VAR.zip" ./"$VAR" 
}

function create_docker_env() {
  VAR=$1
  if [ -z $VAR ]
  then
    echo "ERROR: Argumnet required."
  else
    docker run --name $VAR --hostname "${VAR}_Docker" --restart-policy unless-stopped s7117/ubuntu_20_04_env
  fi
}

function docker_env_shell() {
  VAR=$1
  if [ -z $VAR ]
  then
    echo "ERROR: Container name required."
  else
    docker exec -u s7117 -w /home/s7117 $VAR /bin/zsh
  fi
}

function clean_docker() {                                                       
  docker container rm $(docker container ls -a -q)                              
  docker rmi $(docker images -a -q)                                             
}
